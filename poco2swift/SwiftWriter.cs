using System;
using System.IO;
using poco2swift.probe;
using poco2swift.SwiftTypes;

namespace poco2swift
{
	public abstract class SwiftWriter
	{
		public SwiftWriter(Poco2SwiftType configuration, bool swift_12)
		{
			if (configuration == null)
				throw new ArgumentNullException("configuration");

			_configuration = configuration;
			this.IsEmittingSwift_12 = swift_12;
		}

		public void Write(TypeProxy type, SwiftType swiftType)
		{
			if (type == null)
				throw new ArgumentNullException("type");

			if (swiftType == null)
				throw new ArgumentNullException("swiftType");

			var composite = swiftType as SwiftComposite;

			if (composite == null)
			{
				ErrorHandler.Error("Attempting to write non-composite Swift type for .NET type {0}", type.FullName);
				return;
			}

			var writer = GetWriter(type);

			try
			{
				_currentWriter = writer;

				_currentWriter.WriteLine();

				composite.WriteDefinition(this);
			}
			finally
			{
				_currentWriter = null;
			}
		}

		/// <summary>
		/// Are we emitting Swift 1.2 ?
		/// </summary>
		public bool IsEmittingSwift_12 { get; set; }

		public void Write(string str)
		{
			_currentWriter.Write(str);
		}

		public void Write(string format, params object[] args)
		{
			_currentWriter.Write(format, args);
		}

		public void WriteLine()
		{
			_currentWriter.WriteLine();
		}

		public void WriteLine(string str)
		{
			_currentWriter.WriteLine(str);
		}

		public void WriteLine(string format, params object[] args)
		{
			_currentWriter.WriteLine(format, args);
		}

		protected abstract TextWriter GetWriter(TypeProxy type);

		protected void WriteFilePreamble(TextWriter writer)
		{
			writer.WriteLine("// Generated by poco2swift");

			if (_configuration.imports != null)
			{
				bool firstTime = true;
				
				foreach (var module in _configuration.imports)
				{
					if (String.IsNullOrEmpty(module.name))
						continue;

					if (firstTime)
						writer.WriteLine();

					writer.WriteLine("import {0}", module.name);

					firstTime = false;
				}

				if (!firstTime)
					writer.WriteLine();
			}
		}

		private readonly Poco2SwiftType _configuration;
		private TextWriter _currentWriter;
	}
}
